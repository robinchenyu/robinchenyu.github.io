#+TITLE:       Clojure Cookbook:multimethods by protocol
#+AUTHOR:
#+EMAIL:       robin.chenyu@gmail.com
#+DATE:        2017-01-31 Tue
#+URI:         /blog/%y/%m/%d/clojure-cookbook-multimethods-by-protocol
#+KEYWORDS:    clojure, defprotocol, multimethods
#+TAGS:        clojure, defprotocol, multimethods
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: 使用defprotocol实现多态

** 使用defprotocol多态实现
   在[[http://blog912.cn/blog/2017/01/31/clojure-cookbook-%E5%A4%9A%E9%87%8D%E6%96%B9%E6%B3%95/][上一篇]] 学习到可以使用defmulti和defmethod实现多重函数，这里使用defprotocol实现相同功能。
   #+BEGIN_SRC clojure
   (defprotocol Shape
     (area [s] "计算多边形面积")
     (perimeter [s] "计算多边形周长"))

   ;; 定义对应类型
   (defrecord Rectangle [length width]
     Shape
     (area [this] (* length width))
     (perimeter [this] (+ (* 2 length) (* 2 width))))

   ;; 类型
   (->Rectangle 2 4)

   ;; 计算面积
   (area (->Rectangle 2 4))
   ;; => 8
   #+END_SRC

** 总结
    1. 使用defprotocol+defrecord
       - 速度快
       - 需要实现defprotocol中的所有的接口实现
    2. 使用defmulti+defmethod
       - 数度慢
       - 特点灵活(可以使用多参数分发)
