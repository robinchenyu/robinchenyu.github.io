#+TITLE:       Emacs Setup Tips
#+AUTHOR:
#+EMAIL:       robin.chenyu@gmail.com
#+DATE:        2017-02-01 周三
#+URI:         /blog/%y/%m/%d/emacs-setup-tips
#+KEYWORDS:    emacs, setup
#+TAGS:        emacs, setup
#+LANGUAGE:    en
#+OPTIONS:     H:3 num:nil toc:nil \n:nil ::t |:t ^:nil -:nil f:t *:t <:t
#+DESCRIPTION: Emacs常用配置

** emacs中配置Encoding
   操作系统环境配置如下:
   #+BEGIN_SRC bash
   export LC_ALL='zh_CN.UTF-8'
   export LANG='zh_CN.UTF-8'
   #+END_SRC

   emacs中配置如下, 其中 ~(setq system-time-locale "C")~ 是为了避免org中日期显示有乱码,
   配置为"C"后，日志星期显示为英文。
   另外一种配置方法是让 ~system-time-locale~ 和 ~locale-coding-system~ 都不配置，前者默认为 ~nil~,
   后者默认为cp936。这样日期也能正常显示，且为中文。
   #+BEGIN_SRC emacs-lisp
   (when (or window-system (sanityinc/locale-is-utf8-p))
   (set-language-environment 'utf-8)
   (set-default-coding-systems 'utf-8)
   (set-terminal-coding-system 'utf-8)
   (set-selection-coding-system (if (eq system-type 'windows-nt) 'utf-16-le 'utf-8))
   (prefer-coding-system 'utf-8)
   (setq system-time-locale "C")
   (setq locale-coding-system 'utf-8)
   (message "set locale to utf-8"))

   #+END_SRC

** install info files
    当新安装软件缺少info文件时，可以手动安装，先把info文件拷贝到/usr/share/info目录下，然后使用install-info安装,安装后在emacs的info目录就能查找到对应的info帮助了。
    #+BEGIN_SRC bash
    install-info --info-dir=/usr/share/info /usr/share/info/elisp.info.gz
    #+END_SRC

** org mode中常用格式
   * for *bold*,
   / for /italic/,
   _ for _underlined_,
   = for =verbatim=,
   ~ for ~code~,
   + for +strike-through+

** emacsclient set in totalcmd
   需要在 =total cmd= 中添加按钮，并配置如下命令:
   #+BEGIN_SRC bash
   c:\msys64\mingw64\bin\emacsclientw.exe -na "%~dp0runemacs.exe"
   #+END_SRC
   同时需要启动 ~(server-mode t)~

** emacs 中发送cmd命令调用乱码解决
   最初在magit命令中，发送到终端的文件名为中文时会因为乱码导致执行出错。
   在msys2环境下，shell command 命令中包含的中文需要转换为gbk编码
   环境变量如下:
   #+BEGIN_SRC bash
locale.exe
LANG=zh_CN.UTF-8
LC_CTYPE="zh_CN.UTF-8"
LC_NUMERIC="zh_CN.UTF-8"
LC_TIME="zh_CN.UTF-8"
LC_COLLATE="zh_CN.UTF-8"
LC_MONETARY="zh_CN.UTF-8"
LC_MESSAGES="zh_CN.UTF-8"
LC_ALL=zh_CN.UTF-8
   #+END_SRC
   编码转换
   #+BEGIN_SRC elisp
(defun code-convert (fr to str1)
  (if (stringp str1)
      (encode-coding-string (decode-coding-string str1 fr) to)
    (mapcar (lambda (x)
              (encode-coding-string (decode-coding-string x fr) to)) str1)))

(defalias 'get-cmd-encoding (apply-partially 'code-convert 'utf-8 'gbk))

(defun git-add-encode (&rest args)
  (message "git-add-encode %S" args)
  (let ((x (-flatten args)))
    (if (string= (car x) "add")
        ;; only "add" "--" parameters no need convert
        (get-cmd-encoding x)
      args)))

(advice-add #'magit-call-git :filter-args #'git-add-encode)
   #+END_SRC

** 在使用deft搜索时，显示搜索内容
   deft是个很好用的工具，但是在使用时，搜索到的内容是否匹配只能打开文件才能看到，
   在*deft* buffer中无法看到。修改为显示搜索匹配的行内容，如下:
   [[./emacs-setup/emacs-setup0.jpg]]

   修改如下，添加file入参，并把搜索到的内容行放入到summary hash表中。
   同时需要修改函数的调用处，添加file入参。
   #+BEGIN_SRC elisp
   (defun deft-search-forward (file str)
      "Function to use when matching files against filter strings STR.
    This function calls `search-forward' when `deft-incremental-search'
    is non-nil and `re-search-forward' otherwise."
      (if deft-incremental-search
          (if (search-forward str nil t)
              (puthash file (thing-at-point 'line) deft-hash-summaries))
        (re-search-forward str nil t)))
   #+END_SRC

** emacs中自动换行命令
   ~toggle-truncate-line~

** emacs配置常用键
   | key             | desc                                             |
   |-----------------+--------------------------------------------------|
   | S-<return>      | new line                                         |
   | C-o             | new line from current cursor before              |
   | M-w             | copy whole line/copy region                      |
   | M-Z             | kill up to, not include to ARG of char           |
   | C-.             | set mark command                                 |
   | C-x C-.         | pop global mark, goto last place where it jumped |
   | M-Y             | browse-kill-ring                                 |
   | C-=             | expand region                                    |
   | C-;             | goto word                                        |
   | C-<             | column mode selete up                            |
   | C->             | column mode select down                          |
   | C-c m r         | set rectangle anchor                             |
   | C-c m c         | edit lines                                       |
   | C-c m e         | edit end of lines                                |
   | C-c m a         | edit begin of lines                              |
   | C-M-<backspace> | kill back to indent                              |
   | M-S-down/up     | move lines down/up                               |
   | C-x o           | switch window                                    |
   | C-x 1           | kill other window                                |
   | C-x 2           | split horiticaly                                 |
   | C-x 3           | split verticaly                                  |
   | F7              | split window                                     |
   | M-?             | project find                                     |
   | < and >         | artist-mode add arrow                            |
   | s-;             | csv-table-align                                  |
   | s-q             | avp-decode                                       |
   | s-o             | other-window                                     |
   | s-w             | copy-word                                        |
