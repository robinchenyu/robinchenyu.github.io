<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://blog912.cn/index.xml</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 29 Mar 2017 22:42:54 +0530</lastBuildDate>
    <atom:link href="http://blog912.cn/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>golang在windows下读取clipboard截取图片信息</title>
      <link>http://blog912.cn/golang%E5%9C%A8windows%E4%B8%8B%E8%AF%BB%E5%8F%96clipboard%E6%88%AA%E5%B1%8F%E5%9B%BE%E7%89%87%E4%BF%A1%E6%81%AF/</link>
      <pubDate>Wed, 29 Mar 2017 22:42:54 +0530</pubDate>
      
      <guid>http://blog912.cn/golang%E5%9C%A8windows%E4%B8%8B%E8%AF%BB%E5%8F%96clipboard%E6%88%AA%E5%B1%8F%E5%9B%BE%E7%89%87%E4%BF%A1%E6%81%AF/</guid>
      <description>

&lt;h3 id=&#34;golang二进制处理&#34;&gt;golang二进制处理&lt;/h3&gt;

&lt;p&gt;使用&amp;rsquo;encoding/binary&amp;rsquo;包，和bytes.Buffer配置。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;import &amp;quot;encoding/binary&amp;quot;

data := new(bytes.Buffer)
binary.Write(data, binary.LittleEndian, uint16(&#39;B&#39;)|(uint16(&#39;M&#39;)&amp;lt;&amp;lt;8))
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;golang从windows下的clipboard中抓取图片&#34;&gt;golang从windows下的clipboard中抓取图片&lt;/h3&gt;

&lt;p&gt;windows下的clipboard保存的图片信息是dib结构，保存有bmpinfoheader信息头和pixel图片信息。&lt;/p&gt;

&lt;p&gt;其中bmpinfoheader信息格式如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;type infoHeader struct {
    iSize          uint32 // infoheader 长度，40
    iWidth         uint32 // 图片宽度
    iHeight        uint32 // 图片高度
    iPLanes        uint16 
    iBitCount      uint16 // 每个像素颜色占用空间
    iCompression   uint32 // 图片压缩格式，dib中一般为0或者为3
    iSizeImage     uint32 // 图片pixel占用大小
    iXPelsPerMeter uint32
    iYPelsPerMeter uint32
    iClrUsed       uint32
    iClrImportant  uint32
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;需要根据bmpinfoheader计算出bmp图片的fileheader，并放在bmp图片的头部。fileheader格式如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;type fileHeader struct {
    bfType      uint16 // 恒定为&#39;BM&#39;
    bfSize      uint32 // bmp整个文件大小
    bfReserved1 uint16 
    bfReserved2 uint16
    bfOffBits   uint32 // pixel信息开始的偏移量
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;读取clipboard中图片信息，需要用到win32的api，如下:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;var (
    user32                     = syscall.MustLoadDLL(&amp;quot;user32&amp;quot;)
    openClipboard              = user32.MustFindProc(&amp;quot;OpenClipboard&amp;quot;)
    closeClipboard             = user32.MustFindProc(&amp;quot;CloseClipboard&amp;quot;)
    emptyClipboard             = user32.MustFindProc(&amp;quot;EmptyClipboard&amp;quot;)
    getClipboardData           = user32.MustFindProc(&amp;quot;GetClipboardData&amp;quot;)
    setClipboardData           = user32.MustFindProc(&amp;quot;SetClipboardData&amp;quot;)
    isClipboardFormatAvailable = user32.MustFindProc(&amp;quot;IsClipboardFormatAvailable&amp;quot;)

    kernel32     = syscall.NewLazyDLL(&amp;quot;kernel32&amp;quot;)
    globalAlloc  = kernel32.NewProc(&amp;quot;GlobalAlloc&amp;quot;)
    globalFree   = kernel32.NewProc(&amp;quot;GlobalFree&amp;quot;)
    globalLock   = kernel32.NewProc(&amp;quot;GlobalLock&amp;quot;)
    globalUnlock = kernel32.NewProc(&amp;quot;GlobalUnlock&amp;quot;)
    lstrcpy      = kernel32.NewProc(&amp;quot;lstrcpyW&amp;quot;)
    copyMemory   = kernel32.NewProc(&amp;quot;CopyMemory&amp;quot;)
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;由于bmp图片信息为压缩，比较占用空间，一般保存到电脑上，可以使用jpg格式，golang bmp转jpg格式非常简单, 需要使用到&amp;rdquo;golang.org/x/image/bmp&amp;rdquo;
和&amp;rdquo;image/jpeg&amp;rdquo;包&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-golang&#34;&gt;    original_image, err := bmp.Decode(dat)
    if err != nil {
        log.Fatal(err)
    }

    err = jpeg.Encode(f, original_image, nil) // f为二进制写权限打开的文件句柄
    if err != nil {
        log.Fatal(err)
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/robinchenyu/clipboard_go/blob/master/main.go&#34;&gt;代码&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugo setup</title>
      <link>http://blog912.cn/hugo/hugo_setup/</link>
      <pubDate>Sat, 11 Mar 2017 22:33:54 +0530</pubDate>
      
      <guid>http://blog912.cn/hugo/hugo_setup/</guid>
      <description>

&lt;h3 id=&#34;hugo-initial&#34;&gt;hugo initial&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo new site mysite
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;hugo-new-post&#34;&gt;hugo new post&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /path/to/mysite
hugo new post/hugo_setup.md
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;hugo-publish&#34;&gt;hugo publish&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;hugo 
# it would produce static pages in public directory
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>使用fabric工具配置ssh免密码登录</title>
      <link>http://blog912.cn/python/fabric-set-ssh-passwdless/</link>
      <pubDate>Wed, 15 Feb 2017 08:36:54 +0530</pubDate>
      
      <guid>http://blog912.cn/python/fabric-set-ssh-passwdless/</guid>
      <description>

&lt;h3 id=&#34;must-setup-the-localhost-keygen&#34;&gt;must setup the localhost keygen&lt;/h3&gt;

&lt;p&gt;generate keys for localhost&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setup-passwdless-in-remote-servers&#34;&gt;setup passwdless in remote servers&lt;/h3&gt;

&lt;p&gt;the script set_pass.py is like below:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;from fabric.api import *
from fabric.contrib.files import *


user = &#39;user&#39;
env.password = &#39;password&#39;

env.hosts=[]
for ip in range(232, 240):
    env.hosts.append(&#39;%s@192.146.156.%d&#39; % (user, ip))

def setpass():
        local(&amp;quot;rm -rf passwd_set/authorized_keys&amp;quot;)
        home = os.getenv(&amp;quot;HOME&amp;quot;)
        with open(&amp;quot;%s/.ssh/id_rsa.pub&amp;quot; % home, &amp;quot;r&amp;quot;) as fr:
                key = fr.read()
        get(&amp;quot;~/.ssh/*&amp;quot;, &amp;quot;passwd_set/.&amp;quot;)
        local(&amp;quot;touch passwd_set/authorized_keys&amp;quot;)
        exists1 = False
        with open(&amp;quot;passwd_set/authorized_keys&amp;quot;, &amp;quot;r&amp;quot;) as fr:
                if key in fr.read():
                        exists1 = True
        if not exists1:
                with open(&amp;quot;passwd_set/authorized_keys&amp;quot;, &amp;quot;a&amp;quot;) as fw:
                        fw.write(key)
                put(&amp;quot;passwd_set/authorized_keys&amp;quot;, &amp;quot;~/.ssh/&amp;quot;)

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;in the bash shell, could run the fabric to set servers passwdless in batch&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;fab -f set_pass.py setpass
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog912.cn/2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog912.cn/2/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog912.cn/hugo/sublime_plugin_hugo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog912.cn/hugo/sublime_plugin_hugo/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog912.cn/hugo_sublime_plugin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog912.cn/hugo_sublime_plugin/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog912.cn/post/1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog912.cn/post/1/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog912.cn/post/3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog912.cn/post/3/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog912.cn/post/test/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog912.cn/post/test/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog912.cn/post/test2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog912.cn/post/test2/</guid>
      <description></description>
    </item>
    
    <item>
      <title></title>
      <link>http://blog912.cn/post/test3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://blog912.cn/post/test3/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>